
--table size

SELECT nspname || '.' || relname AS "relation",
    pg_size_pretty(pg_total_relation_size(C.oid)) AS "total_size"
  FROM pg_class C
  LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace)
  WHERE nspname NOT IN ('pg_catalog', 'information_schema')
    AND C.relkind <> 'i'
    AND nspname !~ '^pg_toast'
  ORDER BY pg_total_relation_size(C.oid) DESC
  LIMIT 5;
  
/*
CREATE TABLE IF NOT EXISTS sc_ttyrec_part_201909
        (LIKE sc_ttyrec  INCLUDING ALL,
		  CONSTRAINT sc_ttyrec_part_201909_c_rec_time CHECK(rec_time >= DATE '2019-09-01' and rec_time < DATE '2019-10-01')	
        ) INHERITS ( sc_ttyrec ) TABLESPACE ts_db_01;
		
CREATE TABLE IF NOT EXISTS sc_ttyrec_part_201910
        (LIKE sc_ttyrec  INCLUDING ALL,
		  CONSTRAINT sc_ttyrec_part_201910_c_rec_time CHECK(rec_time >= DATE '2019-10-01' and rec_time < DATE '2019-11-01')	
        ) INHERITS ( sc_ttyrec ) TABLESPACE ts_db_01;

CREATE TABLE IF NOT EXISTS sc_ttyrec_part_201911
        (LIKE sc_ttyrec  INCLUDING ALL,
		  CONSTRAINT sc_ttyrec_part_201911_c_rec_time CHECK(rec_time >= DATE '2019-11-01' and rec_time < DATE '2019-12-01')	
        ) INHERITS ( sc_ttyrec ) TABLESPACE ts_db_01;

CREATE TABLE IF NOT EXISTS sc_ttyrec_part_201912
        (LIKE sc_ttyrec  INCLUDING ALL,
		  CONSTRAINT sc_ttyrec_part_201912_c_rec_time CHECK(rec_time >= DATE '2019-12-01' and rec_time < DATE '2020-01-01')	
        ) INHERITS ( sc_ttyrec ) TABLESPACE ts_db_01;		
		
*/
--create partition table 
CREATE TABLE bakis.sc_ttyrec_part_201909
(
    db_id bigint NOT NULL,
    session_id character varying(255) COLLATE pg_catalog."default",
    rec_time timestamp without time zone NOT NULL DEFAULT NOW(),
    data bytea,
    instance_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sc_ttyrec_part_201909_pkey PRIMARY KEY (db_id) USING INDEX TABLESPACE ts_aioc,
	CONSTRAINT sc_ttyrec_part_201909_c_rec_time CHECK(rec_time >= DATE '2019-09-01' and rec_time < DATE '2019-10-01')	
)
INHERITS (sc_ttyrec)
WITH (
    OIDS = FALSE
)
TABLESPACE ts_aioc;

ALTER TABLE bakis.sc_ttyrec_part_201909
    OWNER to aioc;

CREATE INDEX idx_scttyrec_part_201909_sessionid
    ON bakis.sc_ttyrec_part_201909 USING btree
    (session_id COLLATE pg_catalog."default")
    TABLESPACE ts_aioc;

CREATE INDEX ix_rep_sc_ttyrec_part_201909
    ON bakis.sc_ttyrec_part_201909 USING btree
    (instance_name COLLATE pg_catalog."default", db_id)
    TABLESPACE ts_aioc;

-----------------
CREATE TABLE bakis.sc_ttyrec_part_201910
(
    db_id bigint NOT NULL,
    session_id character varying(255) COLLATE pg_catalog."default",
    rec_time timestamp without time zone NOT NULL DEFAULT NOW(),
    data bytea,
    instance_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sc_ttyrec_part_201910_pkey PRIMARY KEY (db_id) USING INDEX TABLESPACE ts_aioc,
	CONSTRAINT sc_ttyrec_part_201910_c_rec_time CHECK(rec_time >= DATE '2019-10-01' and rec_time < DATE '2019-11-01')	
)
INHERITS (sc_ttyrec)
WITH (
    OIDS = FALSE
)
TABLESPACE ts_aioc;

ALTER TABLE bakis.sc_ttyrec_part_201910
    OWNER to aioc;


CREATE INDEX idx_scttyrec_part_201910_sessionid
    ON bakis.sc_ttyrec_part_201910 USING btree
    (session_id COLLATE pg_catalog."default")
    TABLESPACE ts_aioc;

CREATE INDEX ix_rep_sc_ttyrec_part_201910
    ON bakis.sc_ttyrec_part_201910 USING btree
    (instance_name COLLATE pg_catalog."default", db_id)
    TABLESPACE ts_aioc;

-----------------
CREATE TABLE bakis.sc_ttyrec_part_201911
(
    db_id bigint NOT NULL,
    session_id character varying(255) COLLATE pg_catalog."default",
    rec_time timestamp without time zone NOT NULL DEFAULT NOW(),
    data bytea,
    instance_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sc_ttyrec_part_201911_pkey PRIMARY KEY (db_id) USING INDEX TABLESPACE ts_aioc,
	CONSTRAINT sc_ttyrec_part_201911_c_rec_time CHECK(rec_time >= DATE '2019-11-01' and rec_time < DATE '2019-12-01')	
)
INHERITS (sc_ttyrec)
WITH (
    OIDS = FALSE
)
TABLESPACE ts_aioc;

ALTER TABLE bakis.sc_ttyrec_part_201911
    OWNER to aioc;


CREATE INDEX idx_scttyrec_part_201911_sessionid
    ON bakis.sc_ttyrec_part_201911 USING btree
    (session_id COLLATE pg_catalog."default")
    TABLESPACE ts_aioc;

CREATE INDEX ix_rep_sc_ttyrec_part_201911
    ON bakis.sc_ttyrec_part_201911 USING btree
    (instance_name COLLATE pg_catalog."default", db_id)
    TABLESPACE ts_aioc;

-----------------
CREATE TABLE bakis.sc_ttyrec_part_201912
(
    db_id bigint NOT NULL,
    session_id character varying(255) COLLATE pg_catalog."default",
    rec_time timestamp without time zone NOT NULL DEFAULT NOW(),
    data bytea,
    instance_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sc_ttyrec_part_201912_pkey PRIMARY KEY (db_id) USING INDEX TABLESPACE ts_aioc,
	CONSTRAINT sc_ttyrec_part_201912_c_rec_time CHECK(rec_time >= DATE '2019-12-01' and rec_time < DATE '2020-01-01')
)
INHERITS (sc_ttyrec)
WITH (
    OIDS = FALSE
)
TABLESPACE ts_aioc;

ALTER TABLE bakis.sc_ttyrec_part_201912
    OWNER to aioc;


CREATE INDEX idx_scttyrec_part_201912_sessionid
    ON bakis.sc_ttyrec_part_201912 USING btree
    (session_id COLLATE pg_catalog."default")
    TABLESPACE ts_aioc;

CREATE INDEX ix_rep_sc_ttyrec_part_201912
    ON bakis.sc_ttyrec_part_201912 USING btree
    (instance_name COLLATE pg_catalog."default", db_id)
    TABLESPACE ts_aioc;

--trigger func. 
--****************************************************************
CREATE FUNCTION sc_ttyrec_part_insert_trigger()
RETURNS trigger AS
$BODY$
 
-- *******************************************************************
-- Created by Deka
-- 16.09.2019
-- Aylik partition yapısına uygun olarak yapildi
-- Otomatik olarak ilgili tablo insertion islemi yapar..
-- *******************************************************************
 
DECLARE
vPartitionDate TEXT;
vPartitionName TEXT;
 
BEGIN
 
if new.rec_time is null then new.rec_time := NOW(); end if ;

vPartitionDate := to_char(new.rec_time,'YYYYMM');
vPartitionName := TG_TABLE_NAME || '_part_' || vPartitionDate;
 
EXECUTE 'INSERT INTO ' || TG_TABLE_SCHEMA || '.' || vPartitionName || ' SELECT ($1).*' using NEW;
 
return null;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER FUNCTION sc_ttyrec_part_insert_trigger()
OWNER TO aioc;



CREATE TRIGGER trg_sc_ttyrec_part_insert
BEFORE INSERT
ON sc_ttyrec
FOR EACH ROW
EXECUTE PROCEDURE sc_ttyrec_part_insert_trigger();
--****************************************************************




  